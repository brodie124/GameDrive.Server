// <auto-generated />
using System;
using GameDrive.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameDrive.Server.Migrations
{
    [DbContext(typeof(GameDriveDbContext))]
    [Migration("20230527122627_StorageObjectTrackIsDeleted")]
    partial class StorageObjectTrackIsDeleted
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GameDrive.Server.Domain.Models.GameProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("game_profiles");
                });

            modelBuilder.Entity("GameDrive.Server.Domain.Models.StorageObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FileHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("FileSizeBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("GameDrivePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GameProfileId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("GameProfileId");

                    b.HasIndex("OwnerId");

                    b.ToTable("storage_objects");
                });

            modelBuilder.Entity("GameDrive.Server.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("GameDrive.Server.Domain.Models.GameProfile", b =>
                {
                    b.OwnsOne("GameDrive.Server.Domain.Models.CsvString", "ExcludePatterns", b1 =>
                        {
                            b1.Property<int>("GameProfileId")
                                .HasColumnType("int");

                            b1.Property<string>("Delimiter")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("GameProfileId");

                            b1.ToTable("game_profiles");

                            b1.WithOwner()
                                .HasForeignKey("GameProfileId");
                        });

                    b.OwnsOne("GameDrive.Server.Domain.Models.CsvString", "IncludePatterns", b1 =>
                        {
                            b1.Property<int>("GameProfileId")
                                .HasColumnType("int");

                            b1.Property<string>("Delimiter")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("GameProfileId");

                            b1.ToTable("game_profiles");

                            b1.WithOwner()
                                .HasForeignKey("GameProfileId");
                        });

                    b.OwnsOne("GameDrive.Server.Domain.Models.CsvString", "SearchableDirectories", b1 =>
                        {
                            b1.Property<int>("GameProfileId")
                                .HasColumnType("int");

                            b1.Property<string>("Delimiter")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("GameProfileId");

                            b1.ToTable("game_profiles");

                            b1.WithOwner()
                                .HasForeignKey("GameProfileId");
                        });

                    b.Navigation("ExcludePatterns")
                        .IsRequired();

                    b.Navigation("IncludePatterns")
                        .IsRequired();

                    b.Navigation("SearchableDirectories")
                        .IsRequired();
                });

            modelBuilder.Entity("GameDrive.Server.Domain.Models.StorageObject", b =>
                {
                    b.HasOne("GameDrive.Server.Domain.Models.GameProfile", "GameProfile")
                        .WithMany()
                        .HasForeignKey("GameProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDrive.Server.Domain.Models.User", "Owner")
                        .WithMany("StorageObjects")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameProfile");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("GameDrive.Server.Domain.Models.User", b =>
                {
                    b.Navigation("StorageObjects");
                });
#pragma warning restore 612, 618
        }
    }
}
